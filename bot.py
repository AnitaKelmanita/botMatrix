from nio import AsyncClient, LoginResponse
import asyncio
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
HOMESERVER = "https://matrix.org"  # –°–µ—Ä–≤–µ—Ä Matrix
BOT_USERNAME = "@bot8812:matrix.org"  # –õ–æ–≥–∏–Ω –±–æ—Ç–∞
PASSWORD = "Bot8812))!!!!"  # –í–∞—à –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
DEVICE_ID = "matrix_bot_8812"  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞

# –ß–∞—Ç—ã –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
ROOM_MESSAGES = {
    # "!wFqTIrwJqxJcCQuagM:matrix.org": ("11:00", "Good morning! Please call all your Appointments and update comments, and if you have Hot traffic - open Call everyday filter and call from there "),  # ESP
    # "!qBBbiNQAqkOOVqpQpl:matrix.org": ("11:00", "Good morning! Please call all your Appointments and update comments, and if you have Hot traffic - open Call everyday filter and call from there "),  # ENG
    # "!TvIFvXtrdTDFyaByFd:matrix.org": ("11:00", "Good morning! Please call all your Appointments and update comments, and if you have Hot traffic - open Call everyday filter and call from there "),  # PL
    # "!aAwTPgNEMgYwtFlkvv:matrix.org": ("11:00", "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –æ–±–Ω–æ–≤–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ Appointment "),  # RU    
    # "!SYNwohtdvpFkrntNoz:matrix.org": ("11:00", "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –æ–±–Ω–æ–≤–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ Appointment "),  # OUTSOURCE    
    # "!wFqTIrwJqxJcCQuagM:matrix.org": ("14:00", "Please call Hot traffic if you have n/ And update Appointments"),  # ESP
    # "!qBBbiNQAqkOOVqpQpl:matrix.org": ("14:00", "Please call Hot traffic if you have n/ And update Appointments"),  # ENG
    # "!TvIFvXtrdTDFyaByFd:matrix.org": ("14:00", "Please call Hot traffic if you have n/ And update Appointments"),  # PL
    "!wFqTIrwJqxJcCQuagM:matrix.org": ("19:30", "reminding to send your talk time"),  # ESP
    "!qBBbiNQAqkOOVqpQpl:matrix.org": ("19:30", "reminding to send your talk time"),  # ENG
    "!TvIFvXtrdTDFyaByFd:matrix.org": ("19:30", "reminding to send your talk time"),  # PL
    "!aAwTPgNEMgYwtFlkvv:matrix.org": ("19:30", "–Ω–∞–ø–æ–º–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–µ"),  # RU    
    "!SYNwohtdvpFkrntNoz:matrix.org": ("19:30", "–Ω–∞–ø–æ–º–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–µ")  # OUTSOURCE  
        }

class MatrixBot(AsyncClient):
    def __init__(self):
        super().__init__(HOMESERVER, BOT_USERNAME, device_id=DEVICE_ID)
        self.sent_today = set()

    async def start(self):
        try:
            response = await self.login(PASSWORD)
            if isinstance(response, LoginResponse):
                print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response}")
                return
            
            asyncio.create_task(self.send_auto_messages())
            print("üîÑ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
            await self.sync_forever(timeout=30000)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

    async def send_auto_messages(self):
        print("üì¢ –ó–∞–ø—É—â–µ–Ω–∞ –∞–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π.")
        while True:
            now = datetime.now().strftime("%H:%M")
            
            for room_id, (time, message) in ROOM_MESSAGES.items():
                if now == time and (room_id, time) not in self.sent_today:
                    print(f"üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {room_id}: {message}")
                    try:
                        await self.room_send(
                            room_id,
                            message_type="m.room.message",
                            content={"msgtype": "m.text", "body": message}
                        )
                        self.sent_today.add((room_id, time))
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {room_id}: {e}")
            
            if now == "00:00":
                self.sent_today.clear()

            await asyncio.sleep(60)

async def main():
    bot = MatrixBot()
    await bot.start()

asyncio.run(main())
